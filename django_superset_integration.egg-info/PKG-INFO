Metadata-Version: 2.4
Name: django-superset-integration
Version: 0.1.0
Summary: A Django app to integrate Apache Superset dashboards into a Django application
Author-email: Alica Burlot <alica.burlot@developpement-durable.gouv.fr>
License-Expression: GPL-3.0-or-later
Project-URL: Homepage, https://github.com/B-Alica/django-superset-integration
Project-URL: Issues, https://github.com/B-Alica/django-superset-integration/issues
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10
Description-Content-Type: text/markdown

# django-superset-integration

django-superset-integration is a Django app to integration Apache Superset dashboards into a Django application.

Detailed documentation is in the "docs" directory.

## Quick start

1. Add "superset-integration" to your INSTALLED_APPS setting like this::

    INSTALLED_APPS = [
        ...,
        "django_superset_integration",
        ...,
    ]

2. Include the superset-integration URLconf in your project urls.py like this::

    path("superset_integration/", include("django_superset_integration.urls")),

3. Generate a Fernet key in a python terminal::

    from cryptography.fernet import Fernet
    FERNET_KEY = Fernet.generate_key()

4. The result is a bytestring like b'jozEHFGLKJHEFUIHEZ4'. **Copy ONLY the content of the string, not the b nor the quotation marks**

5. In your env variables, create a variable **FERNET_KEY** with the copied content as value

6. By default, all dashboard data will be displayed. You can override this by creating your own filtering function and adding it in settings.py::

    RLS_FUNCTION = "my_app.my_module.create_rls_clause"

    Your function must take a parameter `user` and return a SQL rls clause like this : `[{"clause": "1=1"}]`
    See Superset documentation for more information

7. Make sure that your Superset instance parameter **GUEST_TOKEN_JWT_EXP_SECONDS** is more than 300 (5 minutes). Otherwise it will expire before it can be refreshed. For example, set it to 600 (10 minutes).

8. In the template where you want to integrate the dashboard, add the following in your <head>::

    <link href="{% static 'css/ponctual-rejects.css' %}" rel="stylesheet"/>

9. Then add the following at the emplacement where you want the dashboard::

    {% include "django_superset_integration/superset-integration.html" %}

10. In your view's get_context_data, add the following::

    dashboard_name = my_dashboard
    dashboard = SupersetDashboard.objects.get(name__iexact=dashboard_name)
    context["dashboard_integration_id"] = dashboard.integration_id
    context["dashboard_id"] = dashboard.id
    context["superset_domain"] = dashboard.domain.address

11. Run ``python manage.py migrate`` to create the models.

12. Start the development server and visit the admin site to create a SupersetInstance object.

13. After you have created a SupersetInstance object, create a SupersetDashboard object.
